<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yiling.user.enterprise.dao.EnterpriseEmployeeDepartmentMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.yiling.user.enterprise.entity.EnterpriseEmployeeDepartmentDO">
    <result column="id" property="id" />
        <result column="employee_id" property="employeeId" />
        <result column="eid" property="eid" />
        <result column="user_id" property="userId" />
        <result column="department_id" property="departmentId" />
        <result column="del_flag" property="delFlag" />
        <result column="create_user" property="createUser" />
        <result column="create_time" property="createTime" />
        <result column="update_user" property="updateUser" />
        <result column="update_time" property="updateTime" />
        <result column="remark" property="remark" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id,
        employee_id, eid, user_id, department_id, del_flag, create_user, create_time, update_user, update_time, remark
    </sql>

    <insert id="bindEmployeeDepartments">
        insert into enterprise_employee_department(
            employee_id, eid, user_id, department_id, create_user, create_time, update_user, update_time
        ) values
        <foreach collection="list" item="item" separator=",">
            ( #{item.employeeId}, #{item.eid}, #{item.userId}, #{item.departmentId}, #{item.opUserId}, now(), #{item.opUserId}, now() )
        </foreach>
    </insert>

</mapper>
