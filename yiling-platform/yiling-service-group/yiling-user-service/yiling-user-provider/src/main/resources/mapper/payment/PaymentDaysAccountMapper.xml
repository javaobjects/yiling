<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yiling.user.payment.dao.PaymentDaysAccountMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.yiling.user.payment.entity.PaymentDaysAccountDO">
    <result column="id" property="id" />
        <result column="eid" property="eid" />
        <result column="customer_eid" property="customerEid" />
        <result column="customer_name" property="customerName" />
        <result column="total_amount" property="totalAmount" />
        <result column="temporary_amount" property="temporaryAmount" />
        <result column="used_amount" property="usedAmount" />
        <result column="repayment_amount" property="repaymentAmount" />
        <result column="period" property="period" />
        <result column="start_time" property="startTime" />
        <result column="end_time" property="endTime" />
        <result column="status" property="status" />
        <result column="del_flag" property="delFlag" />
        <result column="create_user" property="createUser" />
        <result column="create_time" property="createTime" />
        <result column="update_user" property="updateUser" />
        <result column="update_time" property="updateTime" />
        <result column="remark" property="remark" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id,
        eid, customer_eid, customer_name, total_amount, temporary_amount, used_amount, repayment_amount, period, start_time, end_time, status, del_flag, create_user, create_time, update_user, update_time, remark
    </sql>

    <update id="use">
        update payment_days_account
        set
            used_amount = used_amount + #{useAmount},
            temporary_amount = if(available_amount - temporary_amount >= #{useAmount},  temporary_amount , temporary_amount - (#{useAmount} - (available_amount - temporary_amount))),
            available_amount =  total_amount + temporary_amount - used_amount + repayment_amount - history_use_amount + history_repayment_amount
        where
            id = #{id}
          and total_amount + temporary_amount - used_amount + repayment_amount >= #{useAmount}
    </update>

    <update id="feiYilingUse">
        update payment_days_account t
        set
            t.used_amount = t.used_amount + #{useAmount}
        where
            t.id = #{id}
            and t.available_Amount >= #{useAmount}
    </update>


    <update id="refund">
        update payment_days_account t
        set
            t.used_amount = t.used_amount - #{refundAmount},
            t.available_amount = t.available_amount + #{refundAmount}
        where
            t.id = #{id}
    </update>

    <update id="feiYilingRefund">
        update payment_days_account
        set
            used_amount = used_amount - #{refundAmount}
        where
            id = #{id}
    </update>

    <update id="yilingUpdate">
        update payment_days_account
        <set>
            <if test="totalAmount != null ">
                total_amount = #{totalAmount},
            </if>
            <if test="period != null ">
                period = #{period},
            </if>
            <if test="startTime != null ">
                start_time = #{startTime},
            </if>
            <if test="endTime != null ">
                end_time = #{endTime},
            </if>
            <if test="updateUser != null ">
                update_user = #{updateUser},
            </if>
            <if test="availableAmount != null ">
                available_amount = available_amount + #{availableAmount},
            </if>
            <if test="upPoint != null">
                up_point = #{upPoint},
            </if>
            <if test="upPoint == null">
                up_point = 0,
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="longEffective != null">
                long_effective = #{longEffective}
            </if>
        </set>
        where
            id = #{id}
    </update>

    <update id="feiYilingUpdate">
        update payment_days_account
        <set>
            <if test="availableAmount != null ">
                available_amount = #{availableAmount},
            </if>
            <if test="period != null ">
                period = #{period},
            </if>
            <if test="startTime != null ">
                start_time = #{startTime},
            </if>
            <if test="endTime != null ">
                end_time = #{endTime},
            </if>
            <if test="updateUser != null ">
                update_user = #{updateUser},
            </if>
            <if test="upPoint != null">
                up_point = #{upPoint},
            </if>
            <if test="upPoint == null">
                up_point = 0,
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="longEffective != null">
                long_effective = #{longEffective}
            </if>
        </set>
        where
        id = #{id}
    </update>

    <update id="yilingUpdateTemporary">
        update payment_days_account t
        set
        <if test="totalAmount != null and totalAmount != ''">
            t.total_amount = #{totalAmount},
        </if>
        <if test="period != null and period != ''">
            t.period = #{period},
        </if>
        <if test="temporaryAmount != null ">
            t.temporary_amount = t.temporary_amount + #{temporaryAmount},
        </if>
        <if test="startTime != null">
            t.start_time = #{startTime},
        </if>
        <if test="endTime != null">
            t.end_time = #{endTime},
        </if>
        <if test="updateUser != null and updateUser != ''">
            t.update_user = #{updateUser},
        </if>
        <if test="availableAmount != null ">
            t.available_amount = t.available_amount + #{availableAmount}
        </if>
        where
        t.id = #{id}
    </update>

    <update id="updateRepayment" parameterType="com.yiling.user.payment.entity.PaymentDaysAccountDO">
        update payment_days_account
        set
            repayment_amount = repayment_amount + #{repaymentAmount},
            available_amount = available_amount + #{availableAmount}
        <if test="updateUser != null">
            , update_user = #{updateUser}
        </if>
        <if test="updateTime != null">
            , update_time = #{updateTime}
        </if>
        where
            id = #{id}
    </update>

</mapper>
