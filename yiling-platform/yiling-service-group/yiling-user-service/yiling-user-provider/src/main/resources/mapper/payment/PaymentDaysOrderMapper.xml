<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yiling.user.payment.dao.PaymentDaysOrderMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.yiling.user.payment.entity.PaymentDaysOrderDO">
    <result column="id" property="id" />
        <result column="order_id" property="orderId" />
        <result column="order_no" property="orderNo" />
        <result column="eid" property="eid" />
        <result column="ename" property="ename" />
        <result column="account_id" property="accountId" />
        <result column="customer_eid" property="customerEid" />
        <result column="customer_name" property="customerName" />
        <result column="account_id" property="accountId" />
        <result column="period" property="period" />
        <result column="used_amount" property="usedAmount" />
        <result column="used_time" property="usedTime" />
        <result column="expiration_time" property="expirationTime" />
        <result column="repayment_status" property="repaymentStatus" />
        <result column="return_amount" property="returnAmount" />
        <result column="repayment_amount" property="repaymentAmount" />
        <result column="repayment_time" property="repaymentTime" />
        <result column="del_flag" property="delFlag" />
        <result column="create_user" property="createUser" />
        <result column="create_time" property="createTime" />
        <result column="update_user" property="updateUser" />
        <result column="update_time" property="updateTime" />
        <result column="remark" property="remark" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id,
        order_id, order_no, account_id, period, used_amount, used_time, expiration_time, repayment_status, repayment_amount, repayment_time, del_flag, create_user, create_time, update_user, update_time, remark
    </sql>

    <select id="pageList" resultType="com.yiling.user.payment.entity.PaymentDaysOrderDO">
        select
            t.id,
            t.order_id,
            t.order_no,
            t.account_id,
            t.period,
            t.used_amount,
            t.used_time,
            t.expiration_time,
            t.repayment_status,
            t.repayment_amount,
            t.repayment_time,
            t.return_amount,
            t.create_user,
            t.create_time,
            t.update_user,
            t.update_time,
            t.remark,
            t.ename,
            t.customer_name,
            t.eid,
            t.customer_eid
        from payment_days_order t
        inner join `order` o on t.order_id = o.id
        <where>
             <![CDATA[
                t.expiration_time <= now()
                ]]>
            and t.used_amount - t.repayment_amount - t.return_amount > 0
            <if test="request.buyerEname != null and request.buyerEname != ''">
                and t.customer_name like CONCAT('%',#{request.buyerEname},'%')
            </if>
            <if test="request.sellerEname != null and request.sellerEname !=''">
                and t.ename like CONCAT('%',#{request.sellerEname},'%')
            </if>
            <if test="request.currentEid != null and request.currentEid != 0">
                and t.eid = #{request.currentEid}
            </if>
            <if test="request.repaymentStatus != null and request.repaymentStatus != 0">
                and t.repayment_status = #{request.repaymentStatus}
            </if>
            <if test="request.repaymentStatus != null and request.repaymentStatus == 0">
                and t.repayment_status in (1,2)
            </if>
            <if test="request.contacterId != null and request.contacterId != 0">
                and o.contacter_id = #{request.contacterId}
            </if>
            <if test="request.contactUserList != null and request.contactUserList.size > 0">
                and o.contacter_id IN
                <foreach collection="request.contactUserList" item="item" index="index" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="request.deliveryStartTime != null">
                <![CDATA[
			     and o.delivery_time >= #{request.deliveryStartTime}
			   ]]>
            </if>
            <if test="request.deliveryEndTime != null ">
                <![CDATA[
                and o.delivery_time <= #{request.deliveryEndTime}
                ]]>
            </if>
            <if test="request.startTime != null ">
               <![CDATA[
			     and t.create_time >= #{request.startTime}
			   ]]>
            </if>
            <if test="request.endTime != null ">
                <![CDATA[
                and t.create_time <= #{request.endTime}
                ]]>
            </if>
            <if test="null != request.eidList and request.eidList.size > 0">
                and t.eid IN
                <foreach collection="request.eidList" item="item" index="index" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <![CDATA[
              and o.order_status != -10
            ]]>
            and t.del_flag = 0
        </where>
    </select>

    <select id="getQuotaOrderPage" resultType="com.yiling.user.payment.entity.PaymentDaysOrderDO">
        select
        t.id,
        t.order_id,
        t.order_no,
        t.account_id,
        t.period,
        t.used_amount,
        t.used_time,
        t.expiration_time,
        t.repayment_status,
        t.repayment_amount,
        t.repayment_time,
        t.return_amount,
        t.create_user,
        t.create_time,
        t.update_user,
        t.update_time,
        t.remark,
        t.ename,
        t.customer_name,
        t.eid,
        t.customer_eid
        from payment_days_order t
        inner join `order` o on t.order_id = o.id
        <where>
            <if test="request.accountId != null and request.accountId != 0">
                and t.account_id = #{request.accountId}
            </if>
            <if test="request.ename != null and request.ename !=''">
                and t.ename = #{request.ename}
            </if>
            <if test="request.startTime != null ">
                <![CDATA[
			     and t.create_time >= #{request.startTime}
			   ]]>
            </if>
            <if test="request.endTime != null ">
                <![CDATA[
                and t.create_time <= #{request.endTime}
                ]]>
            </if>
            <if test="request.status != null and request.status != 0">
                and t.repayment_status = #{request.status}
            </if>

            <if test="request.type != null and request.type == 1">
                -- 已使用订单页面：过滤掉已取消的订单
                and o.order_status != -10
                order by t.create_time desc
            </if>
            <if test="request.type != null and request.type == 2">
                -- 已还款订单订单页面：不查询未还款的订单
                and t.repayment_status != 1
                order by t.repayment_time desc
            </if>
            <if test="request.type != null and request.type == 3">
                -- 待还款订单订单页面：不查询 取消的订单、全部退款的订单、全部还款的订单
                and o.order_status != -10 and t.repayment_status != 3
                and t.used_amount - t.return_amount > 0 order by create_time desc
            </if>

        </where>
    </select>

    <select id="getUnRepaymentOrderByCustomerEid" resultType="com.yiling.user.payment.entity.PaymentDaysOrderDO">
        select
            t.id,
            t.order_id,
            t.order_no,
            t.account_id,
            t.period,
            t.used_amount,
            t.used_time,
            t.expiration_time,
            t.repayment_status,
            t.repayment_amount,
            t.repayment_time,
            t.return_amount,
            t.create_user,
            t.create_time,
            t.update_user,
            t.update_time,
            t.remark,
            t.ename,
            t.customer_name,
            t.eid,
            t.customer_eid
            from payment_days_order t
            inner join `order` o on t.order_id = o.id
        <where>
            t.customer_eid = #{customerEid} and t.used_amount - t.return_amount > 0 and t.repayment_status != 3
            and o.order_status = 40 and o.order_type = 2
        </where>
    </select>

</mapper>
