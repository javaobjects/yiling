<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yiling.goods.medicine.dao.B2bGoodsMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.yiling.goods.medicine.entity.B2bGoodsDO">
        <result column="id" property="id"/>
        <result column="goods_id" property="goodsId"/>
        <result column="goods_status" property="goodsStatus"/>
        <result column="out_reason" property="outReason"/>
        <result column="status" property="status"/>
        <result column="eid" property="eid"/>
        <result column="sell_specifications_id" property="sellSpecificationsId"/>
        <result column="standard_id" property="standardId"/>
        <result column="del_flag" property="delFlag"/>
        <result column="create_user" property="createUser"/>
        <result column="create_time" property="createTime"/>
        <result column="update_user" property="updateUser"/>
        <result column="update_time" property="updateTime"/>
        <result column="remark" property="remark"/>
    </resultMap>

    <!-- 通用查询映射结果 -->
    <resultMap id="B2bGoodsResultMap" type="com.yiling.goods.medicine.bo.GoodsListItemBO">
        <result column="id" property="id"/>
        <result column="eid" property="eid"/>
        <result column="standard_id" property="standardId"/>
        <result column="sell_specifications_id" property="sellSpecificationsId"/>
        <result column="audit_status" property="auditStatus"/>
        <result column="out_reason" property="outReason"/>
        <result column="name" property="name"/>
        <result column="ename" property="ename"/>
        <result column="license_no" property="licenseNo"/>
        <result column="manufacturer" property="manufacturer"/>
        <result column="sell_specifications" property="sellSpecifications"/>
        <result column="sell_unit" property="sellUnit"/>
        <result column="specifications" property="specifications"/>
        <result column="unit" property="unit"/>
        <result column="price" property="price"/>
        <result column="middle_package" property="middlePackage"/>
        <result column="big_package" property="bigPackage"/>
        <result column="can_split" property="canSplit"/>
        <result column="manufacturer_address" property="manufacturerAddress"/>
        <result column="is_patent" property="isPatent"/>
        <result column="goods_type" property="goodsType"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id,
        goods_id, goods_status,out_reason,status,eid,sell_specifications_id,standard_id,del_flag, create_user, create_time, update_user, update_time, remark
    </sql>

    <select id="queryB2bGoodsPageList" resultMap="B2bGoodsResultMap">
        SELECT
        g.id,
        g.eid,
        g.ename,
        g.standard_id,
        g.sell_specifications_id,
        g.`name`,
        b.goods_status,
        b.out_reason,
        g.license_no,
        g.sell_specifications,
        g.sell_unit,
        g.specifications,
        g.unit,
        g.manufacturer,
        g.manufacturer_address,
        g.price,
        g.can_split,
        g.middle_package,
        g.big_package,
        g.goods_type
        FROM
        goods g
        inner join b2b_goods b on b.goods_id=g.id and b.del_flag=0
        <where>
            <if test="request.eidList != null and request.eidList.size() > 0">
                and g.eid in
                <foreach item="item" index="index" collection="request.eidList"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="request.goodsId != null and request.goodsId != 0">
                AND g.id = #{request.goodsId}
            </if>
            <if test="request.standardId != null and request.standardId != 0">
                AND g.standard_id = #{request.standardId}
            </if>
            <if test="request.name != null and request.name != ''">
                AND g.`name` like concat('%',#{request.name},'%')
            </if>
            <if test="request.licenseNo != null and request.licenseNo != ''">
                AND g.license_no like concat('%',#{request.licenseNo},'%')
            </if>
            <if test="request.sellSpecificationsId != null and request.sellSpecificationsId != 0">
                AND g.sell_specifications_id=#{request.sellSpecificationsId}
            </if>
            <if test="request.sellSpecifications != null and request.sellSpecifications != ''">
                AND g.specifications like concat('%',#{request.sellSpecifications},'%')
            </if>
            <if test="request.manufacturer != null and request.manufacturer != ''">
                AND g.manufacturer like concat('%',#{request.manufacturer},'%')
            </if>
            <if test="request.standardCategoryId1 != null and request.standardCategoryId1 != 0">
                AND EXISTS (select 1
                FROM standard_goods st
                WHERE st.id=g.standard_id and st.standard_category_id1=#{request.standardCategoryId1})
            </if>
            <if test="request.standardCategoryId2 != null and request.standardCategoryId2 != 0">
                AND EXISTS (select 1
                FROM standard_goods st
                WHERE st.id=g.standard_id and st.standard_category_id2=#{request.standardCategoryId2})
            </if>
            <if test="request.goodsStatus != null and request.goodsStatus!=0">
                AND b.goods_status=#{request.goodsStatus}
            </if>
            <if test="request.goodsStatusList != null and request.goodsStatusList.size() > 0">
                and b.goods_status in
                <foreach item="item" index="index" collection="request.goodsStatusList"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="request.outReason != null and request.outReason != 0">
                AND b.out_reason = #{request.outReason}
            </if>
            <if test="request.includeEids != null and request.includeEids.size() > 0">
                <if test="request.buyerEid != null and request.buyerEid != 0">
                    and EXISTS (select 1 from goods s,b2b_goods b2,enterprise_customer c
                    where s.eid in
                    <foreach item="item" index="index" collection="request.includeEids"
                             open="(" separator="," close=")">
                        #{item}
                    </foreach>
                    and s.sell_specifications_id=g.sell_specifications_id and s.audit_status=4
                    and s.id=b2.goods_id and b2.del_flag=0 and b2.goods_status=1 and b2.status = 1
                    and c.eid=s.eid and c.del_flag=0 and c.customer_eid=#{request.buyerEid})
                </if>
            </if>
            <if test="request.isAvailableQty != null and request.isAvailableQty==1">
                and EXISTS (select 1 from goods_inventory i where i.gid=g.id and i.del_flag=0 group by i.gid having
                sum(i.qty)-SUM(i.frozen_qty)>0)
            </if>
            <if test="request.yilingGoodsFlag != null and request.yilingGoodsFlag!=0">
                <if test="request.yilingGoodsFlag==1">
                    and EXISTS (select 1 from goods s
                    where s.eid in
                    <foreach item="item" index="index" collection="request.includeEids"
                             open="(" separator="," close=")">
                        #{item}
                    </foreach>
                    and s.sell_specifications_id=g.sell_specifications_id and s.audit_status=4 and s.del_flag=0 )
                </if>
                <if test="request.yilingGoodsFlag==2">
                    and not EXISTS (select 1 from goods s
                    where s.eid in
                    <foreach item="item" index="index" collection="request.includeEids"
                             open="(" separator="," close=")">
                        #{item}
                    </foreach>
                    and s.sell_specifications_id=g.sell_specifications_id and s.audit_status=4 and s.del_flag=0 )
                </if>
            </if>
            <if test="request.includeSellSpecificationsIds != null and request.includeSellSpecificationsIds.size() > 0">
                    and g.sell_specifications_id in
                    <foreach item="item" index="index" collection="request.includeSellSpecificationsIds"
                             open="(" separator="," close=")">
                        #{item}
                    </foreach>
            </if>
            and g.audit_status=4
            and b.status=1
            AND g.del_flag=0
        </where>
        ORDER BY g.id DESC
    </select>

    <select id="queryB2bStatusCountListByCondition" resultType="com.yiling.goods.medicine.bo.QueryStatusCountBO">
        SELECT
        b.goods_status,
        COUNT( 1 ) AS 'count'
        FROM
        goods g
        inner join b2b_goods b on b.goods_id=g.id and b.del_flag=0
        <where>
            <if test="request.eidList != null and request.eidList.size() > 0">
                and g.eid in
                <foreach item="item" index="index" collection="request.eidList"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="request.goodsId != null">
                AND g.id = #{request.goodsId}
            </if>
            <if test="request.standardId != null">
                AND g.standard_id = #{request.standardId}
            </if>
            <if test="request.name != null and request.name != ''">
                AND g.`name` like concat('%',#{request.name},'%')
            </if>
            <if test="request.licenseNo != null and request.licenseNo != ''">
                AND g.license_no like concat('%',#{request.licenseNo},'%')
            </if>
            <if test="request.sellSpecifications != null and request.sellSpecifications != ''">
                AND g.specifications like concat('%',#{request.sellSpecifications},'%')
            </if>
            <if test="request.manufacturer != null and request.manufacturer != ''">
                AND g.manufacturer like concat('%',#{request.manufacturer},'%')
            </if>
            <if test="request.standardCategoryId1 != null and request.standardCategoryId1 != 0">
                AND EXISTS (select 1
                FROM standard_goods st
                WHERE st.id=g.standard_id and st.standard_category_id1=#{request.standardCategoryId1})
            </if>
            <if test="request.standardCategoryId2 != null and request.standardCategoryId2 != 0">
                AND EXISTS (select 1
                FROM standard_goods st
                WHERE st.id=g.standard_id and st.standard_category_id2=#{request.standardCategoryId2})
            </if>
            <if test="request.goodsStatus != null and request.goodsStatus!=0">
                AND b.goods_status=#{request.goodsStatus}
            </if>
            <if test="request.outReason != null and request.outReason != 0">
                AND b.out_reason = #{request.outReason}
            </if>
            AND g.del_flag=0
            and g.audit_status=4
            and b.status=1
        </where>
        GROUP BY
        b.goods_status
    </select>

    <select id="queryB2bStatusCountList" resultType="com.yiling.goods.medicine.bo.QueryStatusCountBO">
        SELECT
        b.goods_status,
        COUNT( 1 ) AS 'count'
        FROM
        goods g,b2b_goods b
        where b.goods_id=g.id and b.status=1 and g.del_flag=0 and b.del_flag=0
        and g.audit_status=4
        and g.eid in
        <foreach item="item" index="index" collection="eidList"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
        GROUP BY
        b.goods_status
    </select>

    <select id="getB2bGoodsSaleTopLimit" resultType="long">
        SELECT
        g.id
        FROM
        goods g
        inner join b2b_goods b on b.goods_id=g.id and b.del_flag=0
        left join goods_statistics s on s.goods_id=g.id and s.del_flag=0
        <where>
            g.del_flag=0
            and g.audit_status=4
            and b.goods_status=1
            <if test="eids != null and eids.size() > 0">
                and g.eid in
                <foreach item="item" index="index" collection="eids"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        order by s.b2b_sale_number desc,g.id desc
        <if test="limit != null and limit != 0">
            LIMIT #{limit}
        </if>
    </select>
    <select id="getEidListBySaleGoods" resultType="java.lang.Long">
        SELECT
        distinct g.eid
        FROM
        goods g
        inner join b2b_goods b on b.goods_id=g.id and b.del_flag=0
        <where>
            g.del_flag=0
            and g.audit_status=4
            and b.goods_status=1
            and g.eid in
            <foreach item="item" index="index" collection="eids"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </select>

    <select id="getSellerGoodsIdsBySellSpecificationsIds"
            resultType="com.yiling.goods.medicine.bo.QuerySellSpecificationsGoodsIdBO">
        SELECT t.sell_specifications_id, t.id as goodsId,t.eid as eid FROM goods t,b2b_goods b
        WHERE t.audit_status = 4 and b.goods_id=t.id and b.goods_status=1 and b.status=1
        and b.del_flag=0 and t.del_flag = 0
        <if test="sellSpecificationsIds != null and sellSpecificationsIds.size() != 0">
            and t.sell_specifications_id in
            <foreach item="item" index="index" collection="sellSpecificationsIds"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="eids != null and eids.size() != 0">
            and t.eid in
            <foreach item="item" index="index" collection="eids"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="getIdsBySpecificationsIdsAndIncludeEidsAndCustomerEid"
            resultType="long">
           SELECT
                DISTINCT s.sell_specifications_id
            FROM
                goods s,
                b2b_goods b2,
                enterprise_customer c
            WHERE
                 s.audit_status = 4
                AND b2.status = 1
                AND s.id = b2.goods_id
                AND b2.del_flag = 0
                AND b2.goods_status = 1
                AND c.eid = s.eid
                AND c.del_flag = 0
                AND c.customer_eid =#{buyerEid}
                <if test="includeEids != null and includeEids.size() != 0">
                    and s.eid in
                    <foreach item="item" index="index" collection="includeEids"
                             open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
                <if test="sellSpecificationsIds != null and sellSpecificationsIds.size() != 0">
                    AND s.sell_specifications_id in
                    <foreach item="item" index="index" collection="sellSpecificationsIds"
                             open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
    </select>

    <select id="getChoicenessByCustomerAndSellSpecificationsId"
            resultType="com.yiling.goods.medicine.bo.ChoicenessGoodsBO">
        select g.id as goodsId from goods g
        inner join b2b_goods b on g.id=b.goods_id and b.del_flag = 0
        LEFT JOIN goods_statistics gs on gs.goods_id =g.id and gs.del_flag=0
        where g.sell_specifications_id=#{request.sellSpecificationsId}
        <if test="request.eids != null and request.eids.size() != 0">
            and g.eid in
            <foreach item="item" index="index" collection="request.eids"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        and b.status=1 and b.goods_status=1 and g.del_flag = 0
        and g.audit_status = 4
        ORDER BY
        <if test="request.purchaseEids != null and request.purchaseEids.size() != 0">
            g.eid in
            <foreach item="item" index="index" collection="request.purchaseEids"
                     open="(" separator="," close=") DESC,">
                #{item}
            </foreach>
        </if>
        gs.b2b_sale_number DESC,g.price ASC
    </select>

    <select id="getGoodsCountByEid" resultType="com.yiling.goods.medicine.bo.EnterpriseGoodsCountBO">
        SELECT g.eid,count(DISTINCT g.sell_specifications_id) as sellSpecificationCount,count(DISTINCT g.standard_id) as standardCount
        FROM goods g INNER JOIN b2b_goods b2g on b2g.goods_id= g.id
        WHERE g.eid= #{eid}
        AND g.audit_status=4
        AND g.del_flag=0
        AND b2g.goods_status=1
        AND b2g.del_flag=0
        AND b2g.status=1
    </select>

    <select id="getGoodsCountByEidList" resultType="com.yiling.goods.medicine.bo.EnterpriseGoodsCountBO">
        SELECT g.eid,count(DISTINCT g.sell_specifications_id) as sellSpecificationCount,count(DISTINCT g.standard_id) as standardCount
        FROM goods g,b2b_goods b2g
        WHERE b2g.goods_id= g.id
        AND g.eid in
        <foreach item="item" index="index" collection="eidList"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
        AND g.audit_status=4 AND g.del_flag=0
        AND b2g.goods_status=1 AND b2g.del_flag=0 AND b2g.status=1
        GROUP BY g.eid;
    </select>


    <select id="queryB2bGoodsList" resultType="com.yiling.goods.medicine.bo.GoodsListItemBO">
        SELECT
        g.id,
        g.eid,
        g.ename,
        g.standard_id,
        g.sell_specifications_id,
        g.`name`,
        b.goods_status,
        b.out_reason,
        g.license_no,
        g.sell_specifications,
        g.sell_unit,
        g.specifications,
        g.unit,
        g.manufacturer,
        g.manufacturer_address,
        g.price,
        g.can_split,
        g.middle_package,
        g.big_package,
        g.goods_type
        FROM
        goods g
        inner join b2b_goods b on b.goods_id=g.id and b.del_flag=0
        <where>
        <if test="request.eidList != null and request.eidList.size() > 0">
            and g.eid in
            <foreach item="item" index="index" collection="request.eidList"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="request.includeSellSpecificationsIds != null and request.includeSellSpecificationsIds.size() > 0">
            and g.sell_specifications_id in
            <foreach item="item" index="index" collection="request.includeSellSpecificationsIds"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        and g.audit_status=4
        and b.status=1
        AND g.del_flag=0
        </where>
    </select>
    <select id="getMinPriceBySpecificationsIds" resultType="com.yiling.goods.medicine.bo.SpecificationPriceBO">
        SELECT bg.sell_specifications_id as sellSpecificationId,min(g.price) as price FROM b2b_goods bg
        LEFT JOIN goods g on g.id = bg.goods_id
        WHERE
        g.del_flag = 0
        and bg.del_flag = 0 and bg.goods_status =1 and bg.`status` = 1
        and  bg.sell_specifications_id in
        <foreach item="item" index="index" collection="sellSpecificationsIds"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
        GROUP BY bg.sell_specifications_id
    </select>
    <select id="queryWaterfallSpecificationPage" resultType="java.lang.Long">
        SELECT bg.sell_specifications_id FROM b2b_goods bg
        LEFT JOIN standard_goods sg on bg.standard_id = sg.id
        LEFT JOIN goods_sale_volume gsv on bg.sell_specifications_id = gsv.sell_specifications_id and gsv.del_flag = 0 and gsv.goods_line = 2
        <if test="request.saleTimStart != null and request.saleTimEnd != null">
            AND gsv.sale_date <![CDATA[ >= ]]> #{request.saleTimStart}
            and gsv.sale_date <![CDATA[ < ]]> #{request.saleTimEnd}
        </if>
        WHERE
        bg.del_flag = 0 and sg.del_flag=0
        <if test="request.ylFlag != null ">
            and sg.yl_flag = #{request.ylFlag}
        </if>
        <if test="request.sellerEids != null and request.sellerEids.size() > 0">
            and bg.eid in
            <foreach item="item" index="index" collection="request.sellerEids"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        and bg.goods_status = 1 and bg.`status`=1
        GROUP BY bg.sell_specifications_id
        ORDER BY
        <if test="request.purchaseEids != null and request.purchaseEids.size() > 0">
            max(bg.eid in
            <foreach item="item" index="index" collection="request.purchaseEids"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
            ) desc,
        </if>
        sum(gsv.volume) desc,
        bg.sell_specifications_id desc
    </select>
    <select id="queryDistributorGoodsBySpec" resultType="com.yiling.goods.medicine.bo.ChoicenessGoodsBO">
        SELECT bg.goods_id as goodsId FROM b2b_goods bg
        LEFT JOIN goods g on g.id = bg.goods_id
        LEFT JOIN enterprise e on e.id= bg.eid and e.del_flag=0
        LEFT JOIN goods_sale_volume gsv on bg.goods_id= gsv.goods_id and gsv.del_flag = 0 and goods_line =2
        <if test="request.saleTimStart != null and request.saleTimEnd != null">
            and gsv.sale_date <![CDATA[ >= ]]> #{request.saleTimStart}
            and gsv.sale_date <![CDATA[ < ]]> #{request.saleTimEnd}
        </if>
        WHERE
        g.del_flag = 0 and bg.del_flag = 0 and bg.goods_status=1 and bg.`status`=1
        and e.del_flag = 0
        and bg.sell_specifications_id = #{request.sellSpecificationsId}
        <if test="request.eids !=null and request.eids.size()>0">
            and bg.eid in
            <foreach item="item" index="index" collection="request.eids"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="request.filterPurchaseEnterprise != null and request.filterPurchaseEnterprise == true">
            and bg.eid in
            <foreach item="item" index="index" collection="request.purchaseEids"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="request.filterProvince != null and request.filterProvince == true">
            and e.province_code = #{request.provinceCode}
        </if>
        <if test="request.filterExpired != null and request.filterExpired == true">
            and g.expiry_date <![CDATA[ > ]]> NOW()
        </if>
        <if test="request.filterInStockGoods != null and request.filterInStockGoods == true">
            and bg.goods_id in
            <foreach item="item" index="index" collection="request.inStockGoodsIds"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        group by bg.goods_id
        ORDER BY
        /**
        * 一级排序，是否有库存
        */
        <if test="request.inStockGoodsIds !=null and request.inStockGoodsIds.size()>0">
            bg.goods_id in
            <foreach item="item" index="index" collection="request.inStockGoodsIds"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
            desc,
        </if>
        <choose>
            <when test="request.sortSaleVolume != null and request.sortSaleVolume == true">
                /**
                * 销量排序
                */
                sum(gsv.volume) desc,
            </when>
            <when test="request.sortPrice != null">
                /**
                * 价格排序
                */
                <if test="request.sortPrice == 1">
                    g.price desc,
                </if>
                <if test="request.sortPrice == 2">
                    g.price asc,
                </if>
            </when>
            <otherwise>
                /**
                * 综合排序
                */
                /**
                * 二级排序，是否建采
                */
                <if test="request.purchaseEids !=null and request.purchaseEids.size()>0">
                    bg.eid in
                    <foreach item="item" index="index" collection="request.purchaseEids"
                             open="(" separator="," close=")">
                        #{item}
                    </foreach>
                    desc,
                </if>
                /**
                * 三级排序，是否省区内
                */
                <if test="request.provinceCode !=null and request.provinceCode !=''">
                    e.province_code = #{request.provinceCode} desc,
                </if>
                /**
                * 四级排序，是否优质商家
                */
                <if test="request.highQualityEids !=null and request.highQualityEids.size()>0">
                    bg.eid in
                    <foreach item="item" index="index" collection="request.highQualityEids"
                             open="(" separator="," close=")">
                        #{item}
                    </foreach>
                    desc,
                </if>
                /**
                * 五级排序，销量
                */
                sum(gsv.volume) desc,
            </otherwise>
        </choose>
        bg.id desc
    </select>
    <select id="getInStockGoodsBySpecId" resultType="java.lang.Long">
        SELECT DISTINCT bg.goods_id FROM b2b_goods bg
        LEFT JOIN goods_sku gs on bg.goods_id = gs.goods_id and gs.del_flag = 0
        LEFT JOIN goods_inventory gi on gs.inventory_id = gi.id and gi.del_flag = 0
        WHERE
        bg.del_flag = 0
        and bg.goods_status = 1
        and bg.`status`=1
        and gs.`status` = 0
        and gi.qty - gi.frozen_qty > 0
        and bg.sell_specifications_id = #{sellSpecificationsId}
    </select>
</mapper>
