<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yiling.order.order.dao.OrderDetailMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.yiling.order.order.entity.OrderDetailDO">
        <result column="id" property="id" />
        <result column="order_id" property="orderId" />
        <result column="order_no" property="orderNo" />
        <result column="standard_id" property="standardId" />
        <result column="distributor_goods_id" property="distributorGoodsId" />
        <result column="goods_type" property="goodsType" />
        <result column="goods_id" property="goodsId" />
        <result column="goods_sku_id" property="goodsSkuId" />
        <result column="goods_code" property="goodsCode" />
        <result column="goods_erp_code" property="goodsErpCode" />
        <result column="goods_name" property="goodsName" />
        <result column="goods_common_name" property="goodsCommonName" />
        <result column="goods_license_no" property="goodsLicenseNo" />
        <result column="goods_specification" property="goodsSpecification" />
        <result column="goods_manufacturer" property="goodsManufacturer" />
        <result column="goods_price" property="goodsPrice" />
        <result column="original_price" property="originalPrice" />
        <result column="promotion_goods_price" property="promotionGoodsPrice" />
        <result column="limit_price" property="limitPrice" />
        <result column="goods_quantity" property="goodsQuantity" />
        <result column="goods_amount" property="goodsAmount" />
        <result column="deposit_amount" property="depositAmount" />
        <result column="cash_discount_amount" property="cashDiscountAmount" />
        <result column="promotion_activity_id" property="promotionActivityId" />
        <result column="promotion_activity_type" property="promotionActivityType" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id,
        order_id, order_no, standard_id,goods_type,distributor_goods_id, goods_id, goods_sku_id, goods_code, goods_inner_code ,goods_name, goods_common_name, goods_license_no, goods_specification, goods_manufacturer,
        goods_price, promotion_goods_price,limit_price,original_price,goods_quantity, goods_amount,deposit_amount,cash_discount_amount,promotion_activity_id,promotion_activity_type
    </sql>



    <update id="updateReturnQuantity">
        update order_detail
        set return_quantity= return_quantity + #{returnQuantity}
        where id=#{id}
    </update>


    <select id="selectOrderDetailReportListByBuyerEidList" resultType="com.yiling.order.order.bo.BuyerOrderDetailSumBO">
        SELECT
        od.standard_id AS standardId,
        od.goods_id AS goodsId,
        od.goods_name AS goodsName,
        od.goods_specification as goodsSpecification,
        sum(od.goods_quantity) AS goodsQuantity,
        sum(od.goods_amount) AS goodsAmount,
        sum(od.cash_discount_amount) AS cashDiscountAmount,
        sum(dc.receive_quantity) AS receiveQuantity,
        sum(dc.receive_amount) AS receiveAmount,
        sum(dc.delivery_quantity) AS deliveryQuantity,
        sum(dc.delivery_amount) AS deliveryAmount
        FROM
        order_detail od
        INNER JOIN order_detail_change dc
        ON od.id = dc.detail_id
        INNER JOIN `order` so ON od.order_id = so.id
        WHERE  1 = 1
        <if test="orderDetailQueryPageRequest.contacterId != null">
            and  so.contacter_id = #{orderDetailQueryPageRequest.contacterId}
        </if>
        <if test="orderDetailQueryPageRequest.buyerEidList != null and orderDetailQueryPageRequest.buyerEidList.size() > 0">
            and so.buyer_eid in
            <foreach item="item" index="index" collection="orderDetailQueryPageRequest.buyerEidList"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="orderDetailQueryPageRequest.orderStatusList != null and orderDetailQueryPageRequest.orderStatusList.size() > 0">
            and so.order_status in
            <foreach item="item" index="index" collection="orderDetailQueryPageRequest.orderStatusList"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="orderDetailQueryPageRequest.goodName != null and orderDetailQueryPageRequest.goodName != ''">
            and od.goods_name like concat('%', #{orderDetailQueryPageRequest.goodName},'%')
        </if>
        <if test="orderDetailQueryPageRequest.goodName != null and orderDetailQueryPageRequest.goodName != ''">
            and od.goods_name like concat('%',#{orderDetailQueryPageRequest.goodName},'%')
        </if>
        <if test="orderDetailQueryPageRequest.startCreateTime != null ">
            and so.create_time <![CDATA[ >= ]]> #{orderDetailQueryPageRequest.startCreateTime}
        </if>
        <if test="orderDetailQueryPageRequest.endCreateTime != null ">
            and so.create_time  <![CDATA[ <= ]]> #{orderDetailQueryPageRequest.endCreateTime}
        </if>
        <if test="orderDetailQueryPageRequest.startReceiveTime != null ">
            and so.receive_time <![CDATA[ >= ]]> #{orderDetailQueryPageRequest.startReceiveTime}
        </if>
        <if test="orderDetailQueryPageRequest.endReceiveTime != null ">
            and so.receive_time  <![CDATA[ <= ]]> #{orderDetailQueryPageRequest.endReceiveTime}
        </if>
        group by od.goods_id,od.standard_id,od.goods_name,od.goods_specification

    </select>


    <select id="selectBuyerSumReportByBuyerEidList" resultType="com.yiling.order.order.bo.BuyerOrderSumBO">
        SELECT
        ifnull(SUM(dc.receive_quantity),0) AS receiveTotalQuantity,
        ifnull(SUM(dc.receive_amount),0.00) AS receiveTotalAmount,
        ifnull(SUM(dc.delivery_quantity),0) AS deliveryTotalQuantity,
        ifnull(SUM(dc.delivery_amount),0.00) AS deliveryTotalAmount,
        ifnull(SUM(dc.goods_amount),0.00) AS totalOrderMoney
        FROM
        order_detail od
        INNER JOIN order_detail_change dc
        ON od.id = dc.detail_id
        INNER JOIN `order` so ON od.order_id = so.id
        WHERE 1 = 1
        <if test="orderDetailQueryPageRequest.contacterId != null">
            and so.contacter_id = #{orderDetailQueryPageRequest.contacterId}
        </if>
        <if test="orderDetailQueryPageRequest.buyerEidList != null and orderDetailQueryPageRequest.buyerEidList.size() > 0">
            and so.buyer_eid in
            <foreach item="item" index="index" collection="orderDetailQueryPageRequest.buyerEidList"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="orderDetailQueryPageRequest.orderStatusList != null and orderDetailQueryPageRequest.orderStatusList.size() > 0">
            and so.order_status in
            <foreach item="item" index="index" collection="orderDetailQueryPageRequest.orderStatusList"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="orderDetailQueryPageRequest.goodName != null and orderDetailQueryPageRequest.goodName != ''">
            and od.goods_name like concat('%', #{orderDetailQueryPageRequest.goodName},'%')
        </if>
        <if test="orderDetailQueryPageRequest.goodName != null and orderDetailQueryPageRequest.goodName != ''">
            and od.goods_name like concat('%',#{orderDetailQueryPageRequest.goodName},'%')
        </if>
        <if test="orderDetailQueryPageRequest.startCreateTime != null ">
            and so.create_time <![CDATA[ >= ]]> #{orderDetailQueryPageRequest.startCreateTime}
        </if>
        <if test="orderDetailQueryPageRequest.endCreateTime != null ">
            and so.create_time  <![CDATA[ <= ]]> #{orderDetailQueryPageRequest.endCreateTime}
        </if>
        <if test="orderDetailQueryPageRequest.startReceiveTime != null ">
            and so.receive_time <![CDATA[ >= ]]> #{orderDetailQueryPageRequest.startReceiveTime}
        </if>
        <if test="orderDetailQueryPageRequest.endReceiveTime != null ">
            and so.receive_time  <![CDATA[ <= ]]> #{orderDetailQueryPageRequest.endReceiveTime}
        </if>
    </select>


    <select id="getRecevieGoodsOrderContacterId" resultType="integer">
        SELECT
        SUM(dc.receive_quantity) AS receiveTotalQuantity
        FROM
        order_detail od
        INNER JOIN order_detail_change dc
        ON od.id = dc.detail_id
        INNER JOIN `order` so
        ON od.order_id = so.id
        where so.contacter_id = #{contacterId}
        <if test="orderStatusList != null and orderStatusList.size() > 0">
            and so.order_status in
            <foreach item="item" index="index" collection="orderStatusList"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <select id="getRecevieGoodsOrderByCreateUserId" resultType="integer">
        SELECT
        SUM(dc.receive_quantity) AS receiveTotalQuantity
        FROM
        order_detail od
        INNER JOIN order_detail_change dc
        ON od.id = dc.detail_id
        INNER JOIN `order` so
        ON od.order_id = so.id
        where so.create_user = #{createUserId}
        <if test="orderStatusList != null and orderStatusList.size() > 0">
            and so.order_status in
            <foreach item="item" index="index" collection="orderStatusList"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>


    <select id="getPromotionNumberByDistributorGoodsId" resultType="integer">
        SELECT
                SUM( od.`goods_quantity` - oc.`seller_return_quantity` - oc.`return_quantity`) AS goods_quantity
        FROM
                `order_detail` od
                        INNER JOIN `order_detail_change` oc ON od.`id` = oc.`detail_id`
                        INNER JOIN `order` so ON od.`order_id` = so.`id` AND so.`order_status` != - 10
        WHERE so.`buyer_eid` = #{promotionNumberRequest.buyerEid}
          AND od.`distributor_goods_id` = #{promotionNumberRequest.distributorGoodsId}
          AND od.`promotion_activity_id` = #{promotionNumberRequest.activityId}
    </select>


    <select id="getUserBuyNumber" resultType="long">

        SELECT
                IFNULL(SUM(od.goods_quantity),0) AS goods_quantity
        FROM
                order_detail od
                        INNER JOIN
                        `order` so ON od.order_id = so.id
        WHERE
                so.buyer_eid = #{request.buyerEid}
          AND od.distributor_goods_id = #{request.goodId}
          AND so.create_time <![CDATA[ <= ]]> #{request.endTime}
          AND so.create_time <![CDATA[ >= ]]> #{request.startTime}
          AND so.order_type = 2
          AND od.promotion_activity_type = 0
          AND so.order_status <![CDATA[<>]]> -10

    </select>


    <select id="getBatchUserBuyNumber" resultType="com.yiling.order.order.dto.OrderDetailDTO" parameterType="com.yiling.order.order.dto.request.BatchQueryUserBuyNumberRequest">
        SELECT
        od.distributor_goods_id as goodsId,IFNULL(SUM(od.goods_quantity),0) AS goodsQuantity
        FROM
        order_detail od
        INNER JOIN
        `order` so ON od.order_id = so.id
        WHERE
        so.buyer_eid = #{request.buyerEid}
        <if test="request.goodIds != null and request.goodIds.size() > 0">
            AND od.distributor_goods_id in
            <foreach item="item" index="index" collection="request.goodIds"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        AND so.create_time <![CDATA[ <= ]]> #{request.endTime}
        AND so.create_time <![CDATA[ >= ]]> #{request.startTime}
        AND so.order_type = 2
        AND od.promotion_activity_type = 0
        AND so.order_status <![CDATA[<>]]> -10

        group by od.distributor_goods_id

    </select>
</mapper>
