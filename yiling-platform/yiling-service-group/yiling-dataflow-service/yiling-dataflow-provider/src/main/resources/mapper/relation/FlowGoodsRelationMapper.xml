<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yiling.dataflow.relation.dao.FlowGoodsRelationMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.yiling.dataflow.relation.entity.FlowGoodsRelationDO">
        <result column="id" property="id" />
        <result column="eid" property="eid" />
        <result column="ename" property="ename" />
        <result column="goods_name" property="goodsName" />
        <result column="goods_in_sn" property="goodsInSn" />
        <result column="goods_specifications" property="goodsSpecifications" />
        <result column="goods_manufacturer" property="goodsManufacturer" />
        <result column="yl_goods_id" property="ylGoodsId" />
        <result column="yl_goods_name" property="ylGoodsName" />
        <result column="yl_goods_specifications" property="ylGoodsSpecifications" />
        <result column="goods_relation_label" property="goodsRelationLabel" />
        <result column="del_flag" property="delFlag" />
        <result column="create_user" property="createUser" />
        <result column="create_time" property="createTime" />
        <result column="update_user" property="updateUser" />
        <result column="update_time" property="updateTime" />
        <result column="remark" property="remark" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id,
        eid, ename, goods_name, goods_in_sn, goods_specifications, goods_manufacturer,
        yl_goods_id, yl_goods_name, yl_goods_specifications, goods_relation_label,
        del_flag, create_user, create_time, update_user, update_time, remark
    </sql>

    <sql id="Page_Column_List">
        id,
        eid, ename, goods_name, goods_in_sn, goods_specifications, goods_manufacturer,
        yl_goods_id, yl_goods_name, yl_goods_specifications, goods_relation_label,
        del_flag, create_user, create_time, update_user, update_time, remark,
        (
            case
            when update_user = 0 then create_user
            when update_user != 0 then update_user
            end
        ) as opUserId
    </sql>

    <sql id="Base_Table_Name">
        `flow_goods_relation`
    </sql>

    <select id="page" resultMap="BaseResultMap">
        SELECT <include refid="Page_Column_List"/>
        FROM <include refid="Base_Table_Name"/>
        WHERE del_flag = 0
        <if test="request.eid != null">
            AND eid = #{request.eid}
        </if>
        <if test="request.ylGoodsName != null and request.ylGoodsName != ''">
            AND yl_goods_name like concat('%',#{request.ylGoodsName},'%')
        </if>
        <if test="request.createTimeStart != null">
            AND create_time <![CDATA[ >= ]]> #{request.createTimeStart}
        </if>
        <if test="request.createTimeEnd != null">
            AND create_time <![CDATA[ <= ]]> #{request.createTimeEnd}
        </if>
        <if test="request.relationFlag != null and request.relationFlag == 0">
            AND yl_goods_id = 0
        </if>
        <if test="request.relationFlag != null and request.relationFlag == 1">
            AND yl_goods_id != 0
        </if>
        <if test="request.opUserIdList != null and request.opUserIdList.size() > 0">
            AND (
                IF(update_user = 0, create_user in
                    <foreach item="item" index="index" collection="request.opUserIdList" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                    , update_user = 0
                )
                OR IF(update_user != 0, update_user in
                    <foreach item="item" index="index" collection="request.opUserIdList" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                    , update_user != 0
                )
            )
        </if>
        <if test="request.goodsName != null and request.goodsName != ''">
            AND goods_name like concat('%',#{request.goodsName},'%')
        </if>
        <if test="request.goodsManufacturer != null and request.goodsManufacturer != ''">
            AND goods_manufacturer like concat('%',#{request.goodsManufacturer},'%')
        </if>
        <if test="request.goodsRelationLabelList != null and request.goodsRelationLabelList.size() > 0">
            AND goods_relation_label IN
            <foreach item="item" index="index" collection="request.goodsRelationLabelList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        order by id  desc
    </select>

    <select id="statisticsByYlGoodsId" resultMap="BaseResultMap">
        SELECT id, eid, goods_in_sn, yl_goods_id
        FROM <include refid="Base_Table_Name"/>
        WHERE del_flag = 0
        AND eid != 0
        AND goods_in_sn != ''
        AND yl_goods_id != 0
    </select>

</mapper>
