<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yiling.dataflow.order.dao.FlowSaleMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.yiling.dataflow.order.entity.FlowSaleDO">
        <result column="id" property="id"/>
        <result column="eid" property="eid"/>
        <result column="ename" property="ename"/>
        <result column="crm_enterprise_id" property="crmEnterpriseId" />
        <result column="supplier_level" property="supplierLevel" />
        <result column="so_id" property="soId"/>
        <result column="so_no" property="soNo"/>
        <result column="enterprise_crm_code" property="enterpriseCrmCode"/>
        <result column="enterprise_inner_code" property="enterpriseInnerCode"/>
        <result column="enterprise_name" property="enterpriseName"/>
        <result column="license_number" property="licenseNumber"/>
        <result column="so_time" property="soTime"/>
        <result column="order_time" property="orderTime"/>
        <result column="so_month" property="soMonth"/>
        <result column="goods_in_sn" property="goodsInSn"/>
        <result column="goods_name" property="goodsName"/>
        <result column="so_specifications" property="soSpecifications"/>
        <result column="specification_id" property="specificationId"/>
        <result column="so_batch_no" property="soBatchNo"/>
        <result column="so_product_time" property="soProductTime"/>
        <result column="so_effective_time" property="soEffectiveTime"/>
        <result column="so_quantity" property="soQuantity"/>
        <result column="so_unit" property="soUnit"/>
        <result column="so_price" property="soPrice"/>
        <result column="so_total_amount" property="soTotalAmount"/>
        <result column="so_manufacturer" property="soManufacturer"/>
        <result column="so_license" property="soLicense"/>
        <result column="so_source" property="soSource"/>
        <result column="province_code" property="provinceCode"/>
        <result column="province_name" property="provinceName"/>
        <result column="city_code" property="cityCode"/>
        <result column="city_name" property="cityName"/>
        <result column="region_code" property="regionCode"/>
        <result column="region_name" property="regionName"/>
        <result column="report_sync_status" property="reportSyncStatus"/>
        <result column="crm_code" property="crmCode"/>
        <result column="crm_goods_code" property="crmGoodsCode"/>
        <result column="goods_possible_error" property="goodsPossibleError"/>
        <result column="data_tag" property="dataTag"/>
        <result column="del_flag" property="delFlag"/>
        <result column="create_user" property="createUser"/>
        <result column="create_time" property="createTime"/>
        <result column="update_user" property="updateUser"/>
        <result column="update_time" property="updateTime"/>
        <result column="remark" property="remark"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id,
        eid, ename, crm_enterprise_id, supplier_level,  so_id, so_no,enterprise_crm_code, enterprise_inner_code, enterprise_name, license_number, so_time,
        order_time, so_month, goods_in_sn, goods_name, so_specifications, specification_id, so_batch_no, so_product_time, so_effective_time,
        so_quantity, so_unit, so_price, so_total_amount, so_manufacturer, so_license, so_source,
        province_code, province_name, city_code, city_name, region_code, region_name, report_sync_status,
        crm_code, crm_goods_code, goods_possible_error, data_tag,
        del_flag, create_user, create_time, update_user, update_time, remark
    </sql>

    <sql id="Base_Table_Name">
        `flow_sale`
    </sql>

    <select id="getOrderFlowReport" resultType="com.yiling.dataflow.order.dto.FlowOrderExportReportDetailDTO">

        SELECT
        f.province_name AS provinceName,
        m.goodsId,
        sum( f.so_quantity ) AS quantity,
        sum( f.so_price*f.so_quantity ) AS paymentAmount
        FROM
        flow_sale f
        INNER JOIN (
        SELECT
        sell_specifications_id,
        id AS goodsId
        FROM
        goods
        WHERE
        id IN (
        SELECT
        goods_id
        FROM
        report_goods_category_relation rg
        WHERE
        rg.category_id IN ( SELECT id FROM report_goods_category r
        <where>
            <if test="request.categoryList != null and request.categoryList.size() > 0">
                r.category in
                <foreach item="item" index="index" collection="request.categoryList"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        )
        AND rg.start_time <![CDATA[ <= ]]> now( ) AND rg.end_time <![CDATA[ >= ]]> now( )
        AND rg.del_flag = 0
        )
        ) m ON m.sell_specifications_id = f.specification_id
        AND del_flag = 0
        AND f.so_source = 2
        <if test="request.startCreatTime != null">
            AND f.so_time  <![CDATA[ >= ]]> #{request.startCreatTime}
        </if>
        <if test="request.endCreatTime != null">
            AND f.so_time  <![CDATA[ <= ]]> #{request.endCreatTime}
        </if>
        GROUP BY
        f.province_name,
        m.goodsId

    </select>

    <update id="deleteFlowSaleBydEidAndPoTime">
        UPDATE flow_sale
        SET del_flag = 1, update_time = NOW(), remark = '销售流向解封删除，再重新同步此月份'
        WHERE  del_flag = 0
        AND eid = #{request.eid}
        AND (so_time BETWEEN #{request.startMonth} AND #{request.endMonth})
    </update>

    <select id="page" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <choose>
            <when test="request.timeType == 0">
                `flow_sale`
            </when>
            <when test="request.timeType == 1">
                `flow_sale_${request.selectYear}`
            </when>
            <otherwise>
                `flow_sale`
            </otherwise>
        </choose>
        <where>
            <if test="request.deleteFlag == null or request.deleteFlag == 0">
                AND del_flag = 0
            </if>
            <if test="request.deleteFlag != null and request.deleteFlag == 1">
                AND del_flag = 1
            </if>
            <if test="request.enterpriseName != null and request.enterpriseName != ''">
                AND enterprise_name like concat('%',#{request.enterpriseName},'%')
            </if>
            <if test="request.goodsName != null and request.goodsName != ''">
                AND goods_name like concat('%',#{request.goodsName},'%')
            </if>
            <if test="request.specifications != null and request.specifications != ''">
                AND so_specifications like concat('%',#{request.specifications},'%')
            </if>
            <if test="request.specificationId != null and request.specificationId != 0">
                AND specification_id = #{request.specificationId}
            </if>
            <if test="request.specificationIdFlag != null and request.specificationIdFlag == 0">
                AND specification_id = 0
            </if>
            <if test="request.specificationIdFlag != null and request.specificationIdFlag == 1">
                AND specification_id > 0
            </if>
            <if test="request.license != null and request.license != ''">
                AND so_license like concat('%',#{request.license},'%')
            </if>
            <if test="request.startTime != null">
                AND so_time <![CDATA[ >= ]]> #{request.startTime}
            </if>
            <if test="request.endTime != null">
                AND so_time <![CDATA[ <= ]]> #{request.endTime}
            </if>
            <if test="request.orderTime != null">
                AND order_time <![CDATA[ = ]]> #{request.orderTime}
            </if>
            <if test="request.month != null and request.month != ''">
                AND so_month <![CDATA[ = ]]> #{request.month}
            </if>
            <if test="request.reportSyncStatus != null">
                AND report_sync_status = #{request.reportSyncStatus}
            </if>
            <if test="request.enterpriseCrmCode != null">
                AND enterprise_crm_code = #{request.enterpriseCrmCode}
            </if>
            <if test="request.enterpriseCrmCodeFlag != null and request.enterpriseCrmCodeFlag == 0">
                AND enterprise_crm_code = ''
            </if>
            <if test="request.enterpriseCrmCodeFlag != null and request.enterpriseCrmCodeFlag == 1">
                AND enterprise_crm_code != ''
            </if>
            <if test="request.goodsCrmCodeFlag != null and request.goodsCrmCodeFlag == 0">
                AND crm_goods_code = 0
            </if>
            <if test="request.goodsCrmCodeFlag != null and request.goodsCrmCodeFlag == 1">
                AND crm_goods_code > 0
            </if>
            <if test="request.crmGoodsCode != null">
                AND crm_goods_code = #{request.crmGoodsCode}
            </if>
            <if test="request.idList != null and request.idList.size() > 0">
                AND id in
                <foreach item="item" index="index" collection="request.idList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="request.sourceList != null and request.sourceList.size() > 0">
                AND so_source in
                <foreach item="item" index="index" collection="request.sourceList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="request.eid != null">
                AND eid=#{request.eid,jdbcType=BIGINT}
            </if>
            <if test="request.eidList != null and request.eidList.size() > 0">
                AND eid in
                <foreach item="item" index="index" collection="request.eidList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>

    <select id="getPageBySoMonth" resultMap="BaseResultMap" >
        SELECT
        <include refid="Base_Column_List"/>
        FROM  `flow_sale`
        <where>
            <if test="request.enterpriseName != null and request.enterpriseName != ''">
                AND enterprise_name = #{request.enterpriseName}
            </if>
            <if test="request.enterpriseCrmCode != null and request.enterpriseCrmCode != ''">
                AND enterprise_crm_code = #{request.enterpriseCrmCode}
            </if>
            <if test="request.goodsName != null and request.goodsName != ''">
                AND goods_name = #{request.goodsName}
            </if>
            <if test="request.soSpecifications != null and request.soSpecifications != ''">
                AND so_specifications = #{request.soSpecifications}
            </if>
            <if test="request.soMonth != null and request.soMonth != ''">
                AND so_month <![CDATA[ = ]]> #{request.soMonth}
            </if>
            <if test="request.crmGoodsCode != null">
                AND crm_goods_code = #{request.crmGoodsCode}
            </if>
            AND del_flag = 0
        </where>
    </select>

    <select id="getFlowSaleExistsCount" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM
        <include refid="Base_Table_Name"/>
        WHERE del_flag = 0
        AND eid = #{request.eid}
        AND specification_id = #{request.specificationId}
        AND so_batch_no=#{request.soBatchNo}
        AND enterprise_name = #{request.enterpriseName}
        AND so_time <![CDATA[ >= ]]> #{request.startSoTime}
        AND so_time <![CDATA[ <= ]]> #{request.endSoTime}
    </select>

    <select id="getFlowSaleExistsQuantity" resultType="java.math.BigDecimal">
        SELECT SUM(so_quantity)
        FROM
        <include refid="Base_Table_Name"/>
        WHERE del_flag = 0
        AND eid = #{request.eid}
        AND specification_id = #{request.specificationId}
        AND so_batch_no=#{request.soBatchNo}
        AND enterprise_name = #{request.enterpriseName}
        AND so_time <![CDATA[ >= ]]> #{request.startSoTime}
        AND so_time <![CDATA[ <= ]]> #{request.endSoTime}
    </select>


    <update id="createBackupTable">
        CREATE TABLE ${backupTableName} LIKE ${tableName}
    </update>

    <update id="addColumn">
        ALTER TABLE ${backupTableName} ADD COLUMN `backup_time` datetime(0) NOT NULL DEFAULT '1970-01-01 00:00:00' COMMENT '备份时间' AFTER `remark`
    </update>

    <insert id="initBackupData">
        INSERT INTO ${backupTableName} (<include refid="Base_Column_List"/>)
        SELECT
        <include refid="Base_Column_List"/>
        FROM ${tableName}
        WHERE del_flag = 0 AND so_time <![CDATA[ <= ]]> #{soTimeEnd}
    </insert>

    <insert id="insertBackupDataBySoTime">
        INSERT INTO ${backupTableName} (<include refid="Base_Column_List"/>)
        SELECT
        <include refid="Base_Column_List"/>
        FROM ${tableName}
        WHERE del_flag = 0 AND so_time <![CDATA[ >= ]]> #{soTimeStart} AND so_time <![CDATA[ <= ]]> #{soTimeEnd}
    </insert>

    <select id="getBackupTableIdListBySoTime" resultType="java.lang.Long">
        SELECT id
        FROM ${backupTableName}
        WHERE so_time <![CDATA[ >= ]]> #{soTimeStart} AND so_time <![CDATA[ <= ]]> #{soTimeEnd}
    </select>

    <select id="getCantMatchGoodsQuantityList" resultMap="BaseResultMap">
        select eid, sum(so_quantity) so_quantity from flow_sale
        <where>
            and specification_id = 0
            and so_month = #{monthTime}
            and eid in
            <foreach collection="eidList" item="eid" open="(" close=")" separator=",">
                #{eid}
            </foreach>
        </where>
        group by eid
    </select>

    <select id="getSpecificationIdCount" resultType="java.lang.Integer">
        select count(0) from flow_sale where  del_flag = 0 and specification_id = #{specificationId}
    </select>

    <delete id="deleteBySoTime">
        DELETE FROM flow_sale
        WHERE so_time <![CDATA[ >= ]]> #{soTimeStart} AND so_time <![CDATA[ <= ]]> #{soTimeEnd}
    </delete>

    <delete id="deleteByDelFlagAndEid">
--         DELETE FROM flow_sale
--         WHERE del_flag = 1 AND eid = #{eid} AND so_month <![CDATA[ <= ]]> #{soMonth}
    </delete>

    <delete id="deleteBySoTimeEnd">
        DELETE FROM flow_sale
        WHERE so_time <![CDATA[ <= ]]> #{soTimeEnd}
    </delete>

    <select id="getMonthCount" resultType="com.yiling.dataflow.order.bo.FlowSaleCurrentMonthCountBO">
        SELECT eid, COUNT(*) AS currentMonthCount
        FROM flow_sale
        WHERE del_flag = 0
        AND eid IN
        <foreach item="item" index="index" collection="request.eidList" open="(" separator="," close=")">
            #{item}
        </foreach>
        AND so_time <![CDATA[ >= ]]> #{request.startTime}
        AND so_time <![CDATA[ <= ]]> #{request.endTime}
        GROUP BY eid
    </select>


    <select id="getOneByEidAndSoMonth" resultType="java.lang.Long">
        SELECT COUNT(1) AS count
        FROM ${backupTableName}
        WHERE del_flag = 0 AND eid = #{eid} AND so_month <![CDATA[ = ]]> #{soMonth}
        LIMIT 1
    </select>

    <delete id="deleteByEidAndSoMonth">
        DELETE FROM ${backupTableName}
        WHERE eid = #{eid} AND so_month <![CDATA[ = ]]> #{soMonth}
    </delete>

    <insert id="insertBackupDataByEidAndSoMonth">
        INSERT INTO ${backupTableName} (<include refid="Base_Column_List"/>, backup_time)
        (SELECT <include refid="Base_Column_List"/>, NOW() FROM ${tableName}
        WHERE eid = #{eid} AND so_month <![CDATA[ = ]]> #{soMonth})
    </insert>

    <select id="getMonthListByEidAndSoMonth" resultType="com.yiling.dataflow.order.bo.FlowSaleMonthBO">
        SELECT eid, so_month AS soMonth
        FROM flow_sale
        WHERE eid = #{eid} AND (so_month is not null AND so_month != '')
        AND so_month <![CDATA[ <= ]]> #{soMonth}
        GROUP BY eid, so_month
        ORDER BY so_month DESC
    </select>

    <delete id="deleteById">
        DELETE FROM ${backupTableName}
        WHERE id IN
        <foreach item="item" index="index" collection="idList" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <select id="pageBackup" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM ${request.tableName}
        <where>
            del_flag = 0
            <if test="request.month != null and request.month != ''">
                AND so_month <![CDATA[ = ]]> #{request.month}
            </if>
            <if test="request.eid != null">
                AND eid=#{request.eid,jdbcType=BIGINT}
            </if>
            <if test="request.eidList != null and request.eidList.size() > 0">
                AND eid in
                <foreach item="item" index="index" collection="request.eidList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>

    <insert id="saveBatchBackup" parameterType="java.util.List">
        INSERT INTO
        ${backupTableName}
        ( <include refid="Base_Column_List"/>, backup_time)
        VALUES
        <foreach collection="list" item="entity" index="index" separator=",">
            (
            #{entity.id},
            #{entity.eid},
            #{entity.ename},
            #{entity.crmEnterpriseId},
            #{entity.soId},
            #{entity.soNo},
            #{entity.enterpriseCrmCode},
            #{entity.enterpriseInnerCode},
            #{entity.enterpriseName},
            #{entity.licenseNumber},
            #{entity.soTime},
            #{entity.orderTime},
            #{entity.soMonth},
            #{entity.goodsInSn},
            #{entity.goodsName},
            #{entity.soSpecifications},
            #{entity.specificationId},
            #{entity.soBatchNo},
            #{entity.soProductTime},
            #{entity.soEffectiveTime},
            #{entity.soQuantity},
            #{entity.soUnit},
            #{entity.soPrice},
            #{entity.soTotalAmount},
            #{entity.soManufacturer},
            #{entity.soLicense},
            #{entity.soSource},
            #{entity.provinceCode},
            #{entity.provinceName},
            #{entity.cityCode},
            #{entity.cityName},
            #{entity.regionCode},
            #{entity.regionName},
            #{entity.reportSyncStatus},
            #{entity.crmCode},
            #{entity.crmGoodsCode},
            #{entity.goodsPossibleError},
            #{entity.delFlag},
            #{entity.createUser},
            #{entity.createTime},
            #{entity.updateUser},
            #{entity.updateTime},
            #{entity.remark},
            NOW()
            )
        </foreach>
    </insert>

    <select id="getByIdsContainsDeleteFlag" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM flow_sale
        WHERE id IN
        <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getMaxSoTimeByEid" resultType="java.util.Date">
        SELECT MAX(so_time) AS so_time
        FROM flow_sale
        WHERE del_flag = 0 AND eid = #{eid}
    </select>

    <select id="selectFlowSaleCount" resultType="int">
        SELECT COUNT(1)
        FROM
        <include refid="Base_Table_Name"/>
        where
        eid = #{request.eid}
        AND update_time <![CDATA[ >= ]]> #{request.startUpdateTime}
        AND update_time <![CDATA[ <= ]]> #{request.endUpdateTime}
    </select>

    <select id="selectFlowSalePage" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM flow_sale
        where
        eid = #{request.eid}
        AND update_time <![CDATA[ >= ]]> #{request.startUpdateTime}
        AND update_time <![CDATA[ <= ]]> #{request.endUpdateTime}
    </select>
    <select id="getUnmappedCrmGoods" resultType="com.yiling.dataflow.order.bo.FlowCrmGoodsBO">
        select
        distinct goods_name as goodsName,so_specifications as specifications, ename,eid,crm_code as crmCode
        from flow_sale
        where del_flag=0 and crm_goods_code=0 and crm_code!=''
        <if test="request.limit != null and request.limit != 0">
            limit #{request.limit}
        </if>
    </select>
    
    <select id="getFlowSaleStatistics" resultType="com.yiling.dataflow.order.bo.FlowStatisticsBO">
        SELECT
        s.crm_enterprise_id as crmEnterpriseId,
        DATE_FORMAT(s.so_time, '%Y-%m-%d') as dateTime
        FROM
        flow_sale s
        WHERE
        s.del_flag = 0
        AND so_time <![CDATA[  >= ]]> date_add(DATE_FORMAT(now(), '%Y-%m-%d'), interval -30 day)
        and so_time  <![CDATA[ < ]]> date_add(DATE_FORMAT(now(), '%Y-%m-%d'), interval 0 day)
        and crm_enterprise_id IN
        <foreach item="item" index="index" collection="request.crmEnterpriseIds" open="(" separator="," close=")">
            #{item}
        </foreach>
        GROUP BY
        crm_enterprise_id,
        DATE_FORMAT(s.so_time, '%Y-%m-%d')
    </select>

</mapper>
